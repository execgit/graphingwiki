#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
    gwiki-xml-attachfile
     - Attaches a file to a wiki page with the help of XMLRPC

    @copyright: 2007 by Juhani Eronen <exec@iki.fi> and Joachim Viide
    @license: MIT <http://www.opensource.org/licenses/mit-license.php>
"""

import sys, os
sys.path.append(os.path.join(os.path.split(os.path.abspath(__file__))[0], '..', 'lib', 'python%d.%d' % sys.version_info[:2], 'site-packages'))
import getpass
import xmlrpclib

from optparse import OptionParser

from graphingwiki.editing import xmlrpc_attach, xmlrpc_error, getuserpass

usage = "usage: %prog [options] wikiurl pagename filename"
parser = OptionParser(usage=usage)

parser.add_option("-n", "--name", dest="name",
                  help="Alternate attachment name [for save and load]")
parser.add_option("-s", "--save", action="store_true", dest="save",
                  help="Save attachment (value: target name) [default]")
parser.add_option("-w", "--write", action="store_true", dest="write",
                  help="Save with overwrite (value: target name)")
parser.add_option("-l", "--load", action="store_true", dest="load",
                  help="View attachment")
parser.add_option("-q", "--list", action="store_true", dest="list",
                  help="List attachments on page")
parser.add_option("-d", "--del", action="store_true", dest="rm",
                  help="Delete attachment")
parser.add_option("-u", "--username", dest="username", 
                  help="Username for logging onto the wiki")

options, args = parser.parse_args()

if len(args) == 3:
    wiki, page, fname = args
elif len(args) == 2 and options.list:
    wiki, page = args
else:
    sys.stderr.write("Bad Args\n")
    parser.print_help()
    sys.exit(1)

username = ''
if options.username:
    username = options.username

username, password = getuserpass(username)

if options.load:
    result = xmlrpc_attach(wiki, page, fname, username, password, 'load')

    # If we got back a binary -> rock on
    if isinstance(result, xmlrpclib.Binary):
        # Stdout, alternate name
        if options.name == '-':
            sys.stdout.write(result.data)
        elif options.name:
            fname = options.name

        f = file(fname, 'w')
        f.write(result.data)
        f.close()
        
        print "Loaded attachment %s from page %s." % (fname, page)
        sys.exit(0)
elif options.list:
    result = xmlrpc_attach(wiki, page, '', username, password, 'list')

    print "Attachments on page %s:" % page
    for item in result:
        print item
    sys.exit(0)
elif options.rm:
    result = xmlrpc_attach(wiki, page, fname, username, password, 'delete')

    if result is True:
        print "Deleted attachment %s on page %s." % (fname, page)
        sys.exit(0)
else:
    try:
        content = file(fname).read()
        # Separate file name from its path
        fname = fname.split('/')[-1]
    except:
        sys.stderr.write("File %s not found\n" % fname)
        parser.print_help()
        sys.exit(1)

    overwrite = False

    if options.write:
        overwrite = True
    if options.name:
        fname = options.name

    result = xmlrpc_attach(wiki, page, fname, username, password,
                           'save', content, overwrite)

    if result is True:
        print "Saved attachment %s to page %s." % (fname, page)
        sys.exit(0)

# Us being here means that an error has occurred
errno, err = xmlrpc_error(result)
sys.stderr.write("Error %s: %s\n" % (errno, err))
sys.exit(1)
