--- ./MoinMoin/support/werkzeug/formparser.py.orig	2016-10-31 22:44:02.000000000 +0200
+++ ./MoinMoin/support/werkzeug/formparser.py	2016-12-02 10:27:41.560789006 +0200
@@ -35,12 +35,51 @@ _multipart_boundary_re = re.compile('^[ 
 _supported_multipart_encodings = frozenset(['base64', 'quoted-printable'])
 
 
+class SmartStream(object):
+    """A file-like stream that dynamically switches from memory-based
+    to file-based storage when the total amount of data is larger
+    than 500 kilobytes."""
+
+    def __init__(self, threshold=1024*500):
+        self._is_file = False
+        self._threshold = threshold
+        self._stream = BytesIO()
+
+    def __getattr__(self, key):
+        return getattr(self._stream, key)
+
+    def _check(self):
+        if self._is_file:
+            return
+
+        pos = self._stream.tell()
+        if pos <= self._threshold:
+            return
+
+        stream = TemporaryFile('wb+')
+        stream.write(self._stream.getvalue())
+        stream.flush()
+        stream.seek(pos)
+
+        self._stream.close()
+        self._stream = stream
+        self._is_file = True
+
+    def write(self, *args, **kw):
+        result = self._stream.write(*args, **kw)
+        self._check()
+        return result
+
+    def writelines(self, *args, **kw):
+        result = self._stream.writelines(*args, **kw)
+        self._check()
+        return result
+
+
 def default_stream_factory(total_content_length, filename, content_type,
                            content_length=None):
     """The stream factory that is used per default."""
-    if total_content_length > 1024 * 500:
-        return TemporaryFile('wb+')
-    return BytesIO()
+    return SmartStream()
 
 
 def parse_form_data(environ, stream_factory=None, charset='utf-8',
